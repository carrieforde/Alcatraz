/*! alcatraz theme JS - This file is built with Grunt and should not be edited directly */

!(function(t, e, n) {
  'function' == typeof define && define.amd
    ? define(['jquery'], function(i) {
        return n(i, t, e), i.mobile;
      })
    : n(t.jQuery, t, e);
})(this, document, function(t, e, n, i) {
  (function(t, n) {
    t.extend(t.support, {
      orientation: 'orientation' in e && 'onorientationchange' in e
    });
  })(t),
    (function(t) {
      t.event.special.throttledresize = {
        setup: function() {
          t(this).bind('resize', a);
        },
        teardown: function() {
          t(this).unbind('resize', a);
        }
      };
      var e,
        n,
        i,
        a = function() {
          (n = new Date().getTime()),
            (i = n - o) >= 250
              ? ((o = n), t(this).trigger('throttledresize'))
              : (e && clearTimeout(e), (e = setTimeout(a, 250 - i)));
        },
        o = 0;
    })(t),
    (function(t, e) {
      function i() {
        var t = a();
        t !== o && ((o = t), p.trigger(f));
      }
      var a,
        o,
        r,
        s,
        l,
        u,
        c,
        p = t(e),
        f = 'orientationchange',
        d = { 0: !0, 180: !0 };
      t.support.orientation &&
        ((c = 50),
        (r =
          (l = e.innerWidth || p.width()) > (u = e.innerHeight || p.height()) &&
          l - u > c),
        (s = d[e.orientation]),
        ((r && s) || (!r && !s)) && (d = { '-90': !0, 90: !0 })),
        (t.event.special.orientationchange = t.extend(
          {},
          t.event.special.orientationchange,
          {
            setup: function() {
              if (
                t.support.orientation &&
                !t.event.special.orientationchange.disabled
              )
                return !1;
              (o = a()), p.bind('throttledresize', i);
            },
            teardown: function() {
              if (
                t.support.orientation &&
                !t.event.special.orientationchange.disabled
              )
                return !1;
              p.unbind('throttledresize', i);
            },
            add: function(t) {
              var e = t.handler;
              t.handler = function(t) {
                return (t.orientation = a()), e.apply(this, arguments);
              };
            }
          }
        )),
        (t.event.special.orientationchange.orientation = a = function() {
          var i = n.documentElement;
          return (t.support.orientation
          ? d[e.orientation]
          : i && i.clientWidth / i.clientHeight < 1.1)
            ? 'portrait'
            : 'landscape';
        }),
        (t.fn[f] = function(t) {
          return t ? this.bind(f, t) : this.trigger(f);
        }),
        t.attrFn && (t.attrFn[f] = !0);
    })(t, this),
    (function(t, e, n, i) {
      function a(t) {
        for (; t && void 0 !== t.originalEvent; ) t = t.originalEvent;
        return t;
      }
      function o(e, n) {
        var o,
          r,
          s,
          l,
          u,
          c,
          p,
          f,
          d,
          g = e.type;
        if (
          ((e = t.Event(e)),
          (e.type = n),
          (o = e.originalEvent),
          (r = t.event.props),
          g.search(/^(mouse|click)/) > -1 && (r = N),
          o)
        )
          for (p = r.length, l; p; ) (l = r[--p]), (e[l] = o[l]);
        if (
          (g.search(/mouse(down|up)|click/) > -1 && !e.which && (e.which = 1),
          -1 !== g.search(/^touch/) &&
            ((s = a(o)),
            (g = s.touches),
            (u = s.changedTouches),
            (c = g && g.length ? g[0] : u && u.length ? u[0] : i)))
        )
          for (f = 0, d = I.length; f < d; f++) (l = I[f]), (e[l] = c[l]);
        return e;
      }
      function r(e) {
        for (var n, i, a = {}; e; ) {
          n = t.data(e, x);
          for (i in n) n[i] && (a[i] = a.hasVirtualBinding = !0);
          e = e.parentNode;
        }
        return a;
      }
      function s(e, n) {
        for (var i; e; ) {
          if ((i = t.data(e, x)) && (!n || i[n])) return e;
          e = e.parentNode;
        }
        return null;
      }
      function l() {
        O = !1;
      }
      function u() {
        O = !0;
      }
      function c() {
        (H = 0), (Y.length = 0), (S = !1), u();
      }
      function p() {
        l();
      }
      function f() {
        d(),
          (M = setTimeout(function() {
            (M = 0), c();
          }, t.vmouse.resetTimerDuration));
      }
      function d() {
        M && (clearTimeout(M), (M = 0));
      }
      function g(e, n, i) {
        var a;
        return (
          ((i && i[e]) || (!i && s(n.target, e))) &&
            ((a = o(n, e)), t(n.target).trigger(a)),
          a
        );
      }
      function v(e) {
        var n,
          i = t.data(e.target, k);
        !S &&
          (!H || H !== i) &&
          (n = g('v' + e.type, e)) &&
          (n.isDefaultPrevented() && e.preventDefault(),
          n.isPropagationStopped() && e.stopPropagation(),
          n.isImmediatePropagationStopped() && e.stopImmediatePropagation());
      }
      function h(e) {
        var n,
          i,
          o,
          s = a(e).touches;
        s &&
          1 === s.length &&
          ((n = e.target),
          (i = r(n)).hasVirtualBinding &&
            ((H = F++),
            t.data(n, k, H),
            d(),
            p(),
            (X = !1),
            (o = a(e).touches[0]),
            (P = o.pageX),
            (A = o.pageY),
            g('vmouseover', e, i),
            g('vmousedown', e, i)));
      }
      function m(t) {
        O || (X || g('vmousecancel', t, r(t.target)), (X = !0), f());
      }
      function b(e) {
        if (!O) {
          var n = a(e).touches[0],
            i = X,
            o = t.vmouse.moveDistanceThreshold,
            s = r(e.target);
          (X = X || Math.abs(n.pageX - P) > o || Math.abs(n.pageY - A) > o) &&
            !i &&
            g('vmousecancel', e, s),
            g('vmousemove', e, s),
            f();
        }
      }
      function w(t) {
        if (!O) {
          u();
          var e,
            n,
            i = r(t.target);
          g('vmouseup', t, i),
            X ||
              ((e = g('vclick', t, i)) &&
                e.isDefaultPrevented() &&
                ((n = a(t).changedTouches[0]),
                Y.push({ touchID: H, x: n.clientX, y: n.clientY }),
                (S = !0))),
            g('vmouseout', t, i),
            (X = !1),
            f();
        }
      }
      function y(e) {
        var n,
          i = t.data(e, x);
        if (i) for (n in i) if (i[n]) return !0;
        return !1;
      }
      function C() {}
      var z,
        T,
        x = 'virtualMouseBindings',
        k = 'virtualTouchID',
        D = 'vmouseover vmousedown vmousemove vmouseup vclick vmouseout vmousecancel'.split(
          ' '
        ),
        I = 'clientX clientY pageX pageY screenX screenY'.split(' '),
        L = t.event.mouseHooks ? t.event.mouseHooks.props : [],
        N = t.event.props.concat(L),
        E = {},
        M = 0,
        P = 0,
        A = 0,
        X = !1,
        Y = [],
        S = !1,
        O = !1,
        _ = 'addEventListener' in n,
        j = t(n),
        F = 1,
        H = 0;
      for (
        t.vmouse = {
          moveDistanceThreshold: 10,
          clickDistanceThreshold: 10,
          resetTimerDuration: 1500
        },
          T = 0;
        T < D.length;
        T++
      )
        t.event.special[D[T]] = (function(e) {
          var n = e.substr(1);
          return {
            setup: function() {
              y(this) || t.data(this, x, {}),
                (t.data(this, x)[e] = !0),
                (E[e] = (E[e] || 0) + 1),
                1 === E[e] && j.bind(n, v),
                t(this).bind(n, C),
                _ &&
                  ((E.touchstart = (E.touchstart || 0) + 1),
                  1 === E.touchstart &&
                    j
                      .bind('touchstart', h)
                      .bind('touchend', w)
                      .bind('touchmove', b)
                      .bind('scroll', m));
            },
            teardown: function() {
              --E[e],
                E[e] || j.unbind(n, v),
                _ &&
                  (--E.touchstart,
                  E.touchstart ||
                    j
                      .unbind('touchstart', h)
                      .unbind('touchmove', b)
                      .unbind('touchend', w)
                      .unbind('scroll', m));
              var i = t(this),
                a = t.data(this, x);
              a && (a[e] = !1), i.unbind(n, C), y(this) || i.removeData(x);
            }
          };
        })(D[T]);
      _ &&
        n.addEventListener(
          'click',
          function(e) {
            var n,
              i,
              a,
              o,
              r,
              s = Y.length,
              l = e.target;
            if (s)
              for (
                n = e.clientX,
                  i = e.clientY,
                  z = t.vmouse.clickDistanceThreshold,
                  a = l;
                a;

              ) {
                for (o = 0; o < s; o++)
                  if (
                    ((r = Y[o]),
                    0,
                    (a === l &&
                      Math.abs(r.x - n) < z &&
                      Math.abs(r.y - i) < z) ||
                      t.data(a, k) === r.touchID)
                  )
                    return e.preventDefault(), void e.stopPropagation();
                a = a.parentNode;
              }
          },
          !0
        );
    })(t, 0, n),
    (function(t) {
      t.mobile = {};
    })(t),
    (function(t, e) {
      var i = { touch: 'ontouchend' in n };
      (t.mobile.support = t.mobile.support || {}),
        t.extend(t.support, i),
        t.extend(t.mobile.support, i);
    })(t),
    (function(t, e, i) {
      function a(e, n, a, o) {
        var r = a.type;
        (a.type = n),
          o ? t.event.trigger(a, i, e) : t.event.dispatch.call(e, a),
          (a.type = r);
      }
      var o = t(n),
        r = t.mobile.support.touch,
        s = 'touchmove scroll',
        l = r ? 'touchstart' : 'mousedown',
        u = r ? 'touchend' : 'mouseup',
        c = r ? 'touchmove' : 'mousemove';
      t.each(
        'touchstart touchmove touchend tap taphold swipe swipeleft swiperight scrollstart scrollstop'.split(
          ' '
        ),
        function(e, n) {
          (t.fn[n] = function(t) {
            return t ? this.bind(n, t) : this.trigger(n);
          }),
            t.attrFn && (t.attrFn[n] = !0);
        }
      ),
        (t.event.special.scrollstart = {
          enabled: !0,
          setup: function() {
            function e(t, e) {
              a(o, (n = e) ? 'scrollstart' : 'scrollstop', t);
            }
            var n,
              i,
              o = this;
            t(o).bind(s, function(a) {
              t.event.special.scrollstart.enabled &&
                (n || e(a, !0),
                clearTimeout(i),
                (i = setTimeout(function() {
                  e(a, !1);
                }, 50)));
            });
          },
          teardown: function() {
            t(this).unbind(s);
          }
        }),
        (t.event.special.tap = {
          tapholdThreshold: 750,
          emitTapOnTaphold: !0,
          setup: function() {
            var e = this,
              n = t(e),
              i = !1;
            n.bind('vmousedown', function(r) {
              function s() {
                clearTimeout(c);
              }
              function l() {
                s(),
                  n.unbind('vclick', u).unbind('vmouseup', s),
                  o.unbind('vmousecancel', l);
              }
              function u(t) {
                l(),
                  i || p !== t.target
                    ? i && t.preventDefault()
                    : a(e, 'tap', t);
              }
              if (((i = !1), r.which && 1 !== r.which)) return !1;
              var c,
                p = r.target;
              n.bind('vmouseup', s).bind('vclick', u),
                o.bind('vmousecancel', l),
                (c = setTimeout(function() {
                  t.event.special.tap.emitTapOnTaphold || (i = !0),
                    a(e, 'taphold', t.Event('taphold', { target: p }));
                }, t.event.special.tap.tapholdThreshold));
            });
          },
          teardown: function() {
            t(this)
              .unbind('vmousedown')
              .unbind('vclick')
              .unbind('vmouseup'),
              o.unbind('vmousecancel');
          }
        }),
        (t.event.special.swipe = {
          scrollSupressionThreshold: 30,
          durationThreshold: 1e3,
          horizontalDistanceThreshold: 30,
          verticalDistanceThreshold: 30,
          getLocation: function(t) {
            var n = e.pageXOffset,
              i = e.pageYOffset,
              a = t.clientX,
              o = t.clientY;
            return (
              (0 === t.pageY && Math.floor(o) > Math.floor(t.pageY)) ||
              (0 === t.pageX && Math.floor(a) > Math.floor(t.pageX))
                ? ((a -= n), (o -= i))
                : (o < t.pageY - i || a < t.pageX - n) &&
                  ((a = t.pageX - n), (o = t.pageY - i)),
              { x: a, y: o }
            );
          },
          start: function(e) {
            var n = e.originalEvent.touches ? e.originalEvent.touches[0] : e,
              i = t.event.special.swipe.getLocation(n);
            return {
              time: new Date().getTime(),
              coords: [i.x, i.y],
              origin: t(e.target)
            };
          },
          stop: function(e) {
            var n = e.originalEvent.touches ? e.originalEvent.touches[0] : e,
              i = t.event.special.swipe.getLocation(n);
            return { time: new Date().getTime(), coords: [i.x, i.y] };
          },
          handleSwipe: function(e, n, i, o) {
            if (
              n.time - e.time < t.event.special.swipe.durationThreshold &&
              Math.abs(e.coords[0] - n.coords[0]) >
                t.event.special.swipe.horizontalDistanceThreshold &&
              Math.abs(e.coords[1] - n.coords[1]) <
                t.event.special.swipe.verticalDistanceThreshold
            ) {
              var r = e.coords[0] > n.coords[0] ? 'swipeleft' : 'swiperight';
              return (
                a(
                  i,
                  'swipe',
                  t.Event('swipe', { target: o, swipestart: e, swipestop: n }),
                  !0
                ),
                a(
                  i,
                  r,
                  t.Event(r, { target: o, swipestart: e, swipestop: n }),
                  !0
                ),
                !0
              );
            }
            return !1;
          },
          eventInProgress: !1,
          setup: function() {
            var e,
              n = this,
              i = t(n),
              a = {};
            (e = t.data(this, 'mobile-events')) ||
              ((e = { length: 0 }), t.data(this, 'mobile-events', e)),
              e.length++,
              (e.swipe = a),
              (a.start = function(e) {
                if (!t.event.special.swipe.eventInProgress) {
                  t.event.special.swipe.eventInProgress = !0;
                  var i,
                    r = t.event.special.swipe.start(e),
                    s = e.target,
                    l = !1;
                  (a.move = function(e) {
                    r &&
                      !e.isDefaultPrevented() &&
                      ((i = t.event.special.swipe.stop(e)),
                      l ||
                        ((l = t.event.special.swipe.handleSwipe(r, i, n, s)) &&
                          (t.event.special.swipe.eventInProgress = !1)),
                      Math.abs(r.coords[0] - i.coords[0]) >
                        t.event.special.swipe.scrollSupressionThreshold &&
                        e.preventDefault());
                  }),
                    (a.stop = function() {
                      (l = !0),
                        (t.event.special.swipe.eventInProgress = !1),
                        o.off(c, a.move),
                        (a.move = null);
                    }),
                    o.on(c, a.move).one(u, a.stop);
                }
              }),
              i.on(l, a.start);
          },
          teardown: function() {
            var e, n;
            (e = t.data(this, 'mobile-events')) &&
              ((n = e.swipe),
              delete e.swipe,
              e.length--,
              0 === e.length && t.removeData(this, 'mobile-events')),
              n &&
                (n.start && t(this).off(l, n.start),
                n.move && o.off(c, n.move),
                n.stop && o.off(u, n.stop));
          }
        }),
        t.each(
          {
            scrollstop: 'scrollstart',
            taphold: 'tap',
            swipeleft: 'swipe.left',
            swiperight: 'swipe.right'
          },
          function(e, n) {
            t.event.special[e] = {
              setup: function() {
                t(this).bind(n, t.noop);
              },
              teardown: function() {
                t(this).unbind(n);
              }
            };
          }
        );
    })(t, this),
    (function(t, e) {
      var i = { animation: {}, transition: {} },
        a = n.createElement('a'),
        o = ['', 'webkit-', 'moz-', 'o-'];
      t.each(['animation', 'transition'], function(n, r) {
        var s = 0 === n ? r + '-name' : r;
        t.each(o, function(n, o) {
          if (a.style[t.camelCase(o + s)] !== e) return (i[r].prefix = o), !1;
        }),
          (i[r].duration = t.camelCase(i[r].prefix + r + '-duration')),
          (i[r].event = t.camelCase(i[r].prefix + r + '-end')),
          '' === i[r].prefix && (i[r].event = i[r].event.toLowerCase());
      }),
        (t.support.cssTransitions = i.transition.prefix !== e),
        (t.support.cssAnimations = i.animation.prefix !== e),
        t(a).remove(),
        (t.fn.animationComplete = function(a, o, r) {
          var s,
            l,
            u = this,
            c = function() {
              clearTimeout(s), a.apply(this, arguments);
            },
            p = o && 'animation' !== o ? 'transition' : 'animation';
          return (t.support.cssTransitions && 'transition' === p) ||
            (t.support.cssAnimations && 'animation' === p)
            ? (r === e &&
                (t(this).context !== n &&
                  (l = 3e3 * parseFloat(t(this).css(i[p].duration))),
                (0 === l || l === e || isNaN(l)) &&
                  (l = t.fn.animationComplete.defaultDuration)),
              (s = setTimeout(function() {
                t(u).off(i[p].event, c), a.apply(u);
              }, l)),
              t(this).one(i[p].event, c))
            : (setTimeout(t.proxy(a, this), 0), t(this));
        }),
        (t.fn.animationComplete.defaultDuration = 1e3);
    })(t);
});
var AlcatrazUtilities = (function(t) {
  var e = {
    '&': '&amp;',
    '<': '&lt;',
    '>': '&gt;',
    '"': '&quot;',
    "'": '&#39;',
    '/': '&#x2F;'
  };
  return {
    escapeHtml: function(t) {
      return String(t).replace(/[&<>"'\/]/g, function(t) {
        return e[t];
      });
    }
  };
})(jQuery);
!(function() {
  var t = navigator.userAgent.toLowerCase().indexOf('webkit') > -1,
    e = navigator.userAgent.toLowerCase().indexOf('opera') > -1,
    n = navigator.userAgent.toLowerCase().indexOf('msie') > -1;
  (t || e || n) &&
    document.getElementById &&
    window.addEventListener &&
    window.addEventListener(
      'hashchange',
      function() {
        var t,
          e = location.hash.substring(1);
        /^[A-z0-9_-]+$/.test(e) &&
          (t = document.getElementById(e)) &&
          (/^(?:a|select|input|button|textarea)$/i.test(t.tagName) ||
            (t.tabIndex = -1),
          t.focus());
      },
      !1
    );
})();
var AlcatrazNavigation = (function(t) {
    'use strict';
    var e = t('body'),
      n = t(window),
      i = alcatraz_vars.menu_toggle || '',
      a = (alcatraz_vars.menu_close, alcatraz_vars.slide_duration || 300),
      o = function(e) {
        var n = t(this).parent('li');
        'focus' === e.type && n.addClass('focus'),
          'blur' === e.type && n.removeClass('focus');
      },
      r = function(t, e) {
        var n = e.item || {},
          i = e.args || {};
        u(n, i);
      },
      s = function(e) {
        var i = e.keyCode ? e.keyCode : e.which,
          o = t(document.activeElement);
        if (e.altKey || e.ctrlKey) return !0;
        if (!o.is('nav a:focus')) return !0;
        var r,
          s = o.parent(),
          l = s.parent(),
          u = { autoClose: !0, duration: a },
          c = { autoClose: !1, duration: a },
          p = { item: s, args: u };
        switch (i) {
          case 9:
            if ('keydown' === e.type) return !0;
            s.children('ul').length && l.hasClass('top-level')
              ? n.trigger('toggleListItem.alcatraz', p)
              : l.hasClass('top-level') &&
                l.children('li.toggled').each(function() {
                  var e = { item: t(this), args: c };
                  n.trigger('toggleListItem.alcatraz', e);
                });
            break;
          case 32:
            if ('keydown' === e.type) return e.preventDefault(), !0;
            s.children('ul').length && n.trigger('toggleListItem.alcatraz', p);
            break;
          case 37:
            if ('keydown' === e.type) return e.preventDefault(), !0;
            l.hasClass('top-level') && s.prev('li').length
              ? ((r = s.prev('li')),
                n.trigger('toggleListItem.alcatraz', { item: r, args: u }),
                r
                  .find('a')
                  .first()
                  .focus())
              : l
                  .parent('li')
                  .parent('ul')
                  .hasClass('top-level')
                ? ((r = l.parent('li').prev('li')),
                  n.trigger('toggleListItem.alcatraz', { item: r, args: u }),
                  r
                    .find('a')
                    .first()
                    .focus())
                : l.hasClass('top-level') ||
                  ((r = l.parent('li')),
                  n.trigger('toggleListItem.alcatraz', { item: r, args: u }),
                  r
                    .find('a')
                    .first()
                    .focus());
            break;
          case 38:
            if ('keydown' === e.type) return e.preventDefault(), !0;
            l.hasClass('top-level') || s.prev('li').length
              ? !l.hasClass('top-level') &&
                s.prev('li').length &&
                s
                  .prev('li')
                  .find('a')
                  .first()
                  .focus()
              : l
                  .parent('li')
                  .find('a')
                  .first()
                  .focus();
            break;
          case 39:
            if ('keydown' === e.type) return e.preventDefault(), !0;
            l.hasClass('top-level') && s.next('li').length
              ? ((r = s.next('li')),
                n.trigger('toggleListItem.alcatraz', { item: r, args: u }),
                r
                  .find('a')
                  .first()
                  .focus())
              : !l.hasClass('top-level') && s.children('ul').length
                ? (s.hasClass('toggled') ||
                    n.trigger('toggleListItem.alcatraz', p),
                  s
                    .children('ul')
                    .first()
                    .find('a')
                    .first()
                    .focus())
                : l
                    .parent('li')
                    .parent('ul')
                    .hasClass('top-level')
                  ? ((r = l.parent('li').next('li')),
                    n.trigger('toggleListItem.alcatraz', { item: r, args: u }),
                    r
                      .find('a')
                      .first()
                      .focus())
                  : l.hasClass('top-level') ||
                    ((r = l.parent('li')),
                    n.trigger('toggleListItem.alcatraz', { item: r, args: u }),
                    r
                      .next('li')
                      .find('a')
                      .first()
                      .focus());
            break;
          case 40:
            if ('keydown' === e.type) return e.preventDefault(), !0;
            s.children('ul').length && l.hasClass('top-level')
              ? s
                  .find('ul li')
                  .first()
                  .find('a')
                  .first()
                  .focus()
              : !l.hasClass('top-level') &&
                s.next('li').length &&
                s
                  .next('li')
                  .find('a')
                  .first()
                  .focus();
        }
        return !0;
      },
      l = function() {
        var e = t('body'),
          n = t('#site-navigation'),
          i = n.find('#primary-menu');
        return (
          n.hasClass('toggled')
            ? (e.removeClass('menu-open'),
              n.removeClass('toggled'),
              i.attr('aria-expanded', 'false'))
            : (e.addClass('menu-open'),
              n.addClass('toggled'),
              i.attr('aria-expanded', 'true')),
          this
        );
      },
      u = function(t, e) {
        var i = t.parents('ul').last(),
          a = t.find('.sub-level-toggle').first(),
          o = a.parents('li').last(),
          r = t.find('ul').first(),
          s = e || {},
          l = s.autoClose || !1,
          u = s.duration || 500;
        return (
          l &&
            i
              .find('ul')
              .not(o.find('ul'))
              .slideUp(u),
          t.toggleClass('toggled'),
          a
            .toggleClass('toggled')
            .blur()
            .next('ul')
            .slideToggle(u)
            .toggleClass('toggled'),
          i.is('#primary-menu') &&
          t.hasClass('menu-item-has-children') &&
          t.hasClass('toggled')
            ? r.width() + r.offset().left > n.width() &&
              t.addClass('reverse-expand')
            : setTimeout(function() {
                t.removeClass('reverse-expand');
              }, u),
          i
            .find('.toggled')
            .not(o)
            .not(o.find('.toggled'))
            .removeClass('toggled'),
          this
        );
      },
      c = function(e, a) {
        var o = a || {};
        return t(e).each(function() {
          var e = t(this),
            a = e.find('li').has('ul'),
            r =
              '<button type="button" class="sub-level-toggle"><span class="screen-reader-text">' +
              Alcatraz.Utils.escapeHtml(i) +
              '</span><span class="sub-level-toggle-span span-1"></span><span class="sub-level-toggle-span span-2"></span></button>';
          a.each(function() {
            t(this)
              .find('a')
              .first()
              .after(r);
          }),
            e.find('.sub-level-toggle').on('click', function(e) {
              e.preventDefault();
              var i = { item: t(this).parent('li'), args: o };
              n.trigger('toggleListItem.alcatraz', i);
            });
        });
      },
      p = function() {
        var i = t('#site-navigation');
        if (!i) return !1;
        var r = i.prev('.mobile-menu-toggle');
        if (void 0 === r) return !1;
        var s = t('.menu-screen');
        if (!s) return !1;
        var l = i.find('#primary-menu');
        if (void 0 === l) return r.css('display', 'none'), !1;
        var u = l.find('a'),
          p = l.find('ul'),
          f = p.find('a');
        return (
          l.attr('aria-expanded', 'false'),
          t.mobile &&
            (e.hasClass('mobile-nav-style-slide-left') ||
              e.hasClass('mobile-nav-style-slide-right')) &&
            ((t.event.special.swipe.horizontalDistanceThreshold = 15),
            t('#mobile-nav-swipe-zone, .main-navigation').on(
              'swipeleft swiperight',
              function() {
                n.trigger('toggleMobileNav.alcatraz');
              }
            )),
          r.on('click', function() {
            n.trigger('toggleMobileNav.alcatraz');
          }),
          s.on('click', function() {
            n.trigger('toggleMobileNav.alcatraz');
          }),
          c(l, { autoClose: !0, duration: a }),
          p.each(function() {
            t(this)
              .parent()
              .attr('aria-haspopup', 'true');
          }),
          f.attr('tabIndex', '-1'),
          u.each(function() {
            t(this).on('focus blur', o);
          }),
          this
        );
      },
      f = function() {
        var e = t('.alcatraz-sub-page-nav > ul');
        return (
          !!e.length &&
          (c(e, { autoClose: !1, duration: a }),
          e.find('a').each(function() {
            t(this).on('focus blur', o);
          }),
          this)
        );
      },
      d = function() {
        return (
          n.off('toggleMobileNav.alcatraz', l),
          n.on('toggleMobileNav.alcatraz', l),
          n.off('toggleListItem.alcatraz', r),
          n.on('toggleListItem.alcatraz', r),
          n.off('keydown keyup', s),
          n.on('keydown keyup', s),
          this
        );
      };
    return {
      toggleMobileNav: l,
      toggleListItem: u,
      initListToggle: c,
      initSiteNavigation: function() {
        return p(), f(), d(), this;
      },
      initPrimaryNavigation: p,
      initSubPageNavigation: f,
      resetNavEventListeners: d
    };
  })(jQuery),
  Alcatraz = (jQuery,
  { Utils: AlcatrazUtilities || !1, Nav: AlcatrazNavigation || !1 });
!(function(t) {
  t(document).ready(function() {
    Alcatraz.Nav.initSiteNavigation();
  }),
    t(document).on('customize-preview-menu-refreshed', function() {
      Alcatraz.Nav.initPrimaryNavigation();
    });
})(jQuery);
//# sourceMappingURL=alcatraz-theme.min.js.map
