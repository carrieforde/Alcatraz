//--------------------------------------------------------------
// MIXINS
//--------------------------------------------------------------

//-------------------------------
// Center
//
// Makes the assumption the
// element is already block.
//-------------------------------
@mixin center {
	margin-left: auto;
	margin-right: auto;
}


//-------------------------------
// Center Block
//
// Displays block and centers.
//-------------------------------
@mixin center-block {
	display: block;
	margin-left: auto;
	margin-right: auto;
}


//-------------------------------
// Full Width
//
// Extend an element to the edge
// of the browser window when the
// parent has a fixed width. See
// https://css-tricks.com/full-width-containers-limited-width-parents/
// for more info.
//-------------------------------
@mixin full-width {
	width: 100vw;
	position: relative;
	left: 50%;
	right: 50%;
	margin-left: calc(-50vw + 30px);
	margin-right: -50vw;
}


//-------------------------------
// Margin & Padding reset
//
// Useful for styling <ul />
//-------------------------------
@mixin margin-padding-reset {
	margin: 0;
	padding: 0;
}


//-------------------------------
// Hide Text
//
// Also known as Image Replacment
// this hides text, but doesn't
// make it disappear. Great for
// accessibility.
//-------------------------------
@mixin hide-text {
	@include size(rem(1));

	border: 0;
	clip: rect(0 0 0 0);
	margin: rem(-1);
	overflow: hidden;
	padding: 0;
	position: absolute;
}


//-------------------------------
// BEM Element
//
// Appends __$element to the
// block class.
//-------------------------------
@mixin element($element) {

	&__#{$element} {
		@content;
	}
}


//-------------------------------
// BEM Modifier
//
// Appends --$modifier to the
// block class.
//-------------------------------
@mixin modifier($modifier) {

	&--#{$modifier} {
		@content;
	}
}


//-------------------------------
// Grid Classes
//
// Use this mixin to set up
// custom grid classes. It is
// used to set up the Alcatraz
// grid.
//-------------------------------
@mixin grid-classes {

	@for $i from 1 through $grid-columns {

		// Generate the column classes.
		&-#{$i} {
			@include span-columns($i);
		}
	}
}


//-------------------------------
// Grid classes, no gutter
//
// Use this mixin to set up
// custom grid classes that don't
// require a gutter.
//-------------------------------
@mixin grid-classes-no-gutter {

	@for $i from 1 through $grid-columns {

		&-#{$i} {
			@include omega;
			@include span-columns($i, block-collapse);
		}
	}
}


//-------------------------------
// Color Classes
//
// Use this mixin to set up the
// .$color and .$color-background
// utilities classes.
//-------------------------------
@mixin color-class($color) {
	color: $color;

	&-background {
		background-color: $color;
	}
}


//-------------------------------
// Omega reset
//
// Use with Neat columns to
// easily reset omega.
//-------------------------------
@mixin omega-reset($nth) {
	&:nth-child(#{nth}) {
		margin-right: flex-gutter();
	}

	&:nth-child(#{nth}+1) {
		clear: none;
	}
}
