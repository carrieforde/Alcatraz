//--------------------------------------------------------------
// MIXINS
//--------------------------------------------------------------

//-------------------------------
// Center
//
// Makes the assumption the
// element is already block.
//-------------------------------
@mixin center {
	margin-left: auto;
	margin-right: auto;
}


//-------------------------------
// Center Block
//
// Displays block and centers.
//-------------------------------
@mixin center-block {
	display: block;
	margin-left: auto;
	margin-right: auto;
}


//-------------------------------
// Full Width
//
// Extend an element to the edge
// of the browser window when the
// parent has a fixed width. See
// https://css-tricks.com/full-width-containers-limited-width-parents/
// for more info.
//-------------------------------
@mixin full-width {
	width: 100vw;
	position: relative;
	left: 50%;
	right: 50%;
	margin-left: calc(-50vw + 30px);
	margin-right: -50vw;
}

// Margin-Padding reset - useful for styling <ul>s
//-------------------------------
// Margin & Padding reset
//
// Useful for styling <ul />
//-------------------------------
@mixin margin-padding-reset {
	margin: 0;
	padding: 0;
}


//-------------------------------
// Hide Text
//
// Also known as Image Replacment
// this hides text, but doesn't
// make it disappear. Great for
// accessibility.
//-------------------------------
@mixin hide-text {
	@include size(rem(1));

	border: 0;
	clip: rect(0 0 0 0);
	margin: rem(-1);
	overflow: hidden;
	padding: 0;
	position: absolute;
}


//-------------------------------
// Color Classes
//
// Use this mixin to set up the
// .$color and .$color-background
// utilities classes.
//-------------------------------
@mixin color-class( $color ) {
	color: $color;

	&-background {
		background-color: $color;
	}
}


//-------------------------------
// Omega reset
//
// Use with Neat columns to
// easily reset omega.
//-------------------------------
@mixin omega-reset($nth) {
	&:nth-child(#{nth}) {
		margin-right: flex-gutter();
	}

	&:nth-child(#{nth}+1) {
		clear: none;
	}
}


//-------------------------------
// Larger screen nav display styles
//
// because we fucked up, and this
// shouldn't be a mixin.
//-------------------------------
@mixin large-screen-nav-display( $display: 'inline-block' ) {

	.main-navigation #primary-menu-wrap,
	.mobile-nav-style-slide-left.admin-bar #primary-menu-wrap,
	.mobile-nav-style-slide-right.admin-bar #primary-menu-wrap {
		@include position(static, auto auto null auto);
		@include size(auto);

		min-height: auto;
		opacity: 1;
		text-align: center;
	}

	.main-navigation #primary-menu,
	.mobile-nav-style-slide-left #primary-menu,
	.mobile-nav-style-slide-right #primary-menu {
		display: $display;
		height: auto;
		min-height: auto;
		overflow: visible;
		padding-top: 0;
		padding-bottom: 0;
		position: static;
		text-align: center;
	}

	.main-navigation #primary-menu .menu-item {
		display: $display;
		text-align: left;
		width: auto;
	}
}

// Larger Screen Nav Drop-down Styles
@mixin large-screen-nav-dropdown {

	.main-navigation #primary-menu {

		.menu-item {
			&.menu-item-has-children > a {
				padding-right: rem(40);
			}

			&.hovered > .sub-menu {
				display: block;
			}

			> .sub-menu {
				position: absolute;

				.sub-menu {
					left: 100%;
					top: 0;
				}
			}
		}

		> .menu-item {

			&.reverse-expand {

				.sub-menu {
					right: 0;
				}
			}

			.sub-menu .menu-item.reverse-expand .sub-menu {
				left: -100%;
			}
		}
	}

	.main-navigation #primary-menu {

		.sub-menu {
			background-color: $color__background-sub-menu;
			border-bottom: $border__nav-sub-menu;
			box-shadow: $color__box-shadow-sub-menu;
			padding: 0;
			position: relative;
			text-align: left;

			.menu-item {
				display: block;
				width: 100%;

				a {
					color: $color__link-nav-sub-menu;

					&:hover {
						color: $color__link-nav-sub-menu-hover;
					}
				}

				.sub-level-toggle .sub-level-toggle-span {
					background-color: $color__background-sub-menu-toggle;
				}

				.sub-level-toggle:hover .sub-level-toggle-span {
					background-color: $color__background-sub-menu-toggle-hover;
				}
			}
		}
	}
}
